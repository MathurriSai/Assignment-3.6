1)	Can you overload a method with the same return type? Explain your answer with proper logic.

   Yes, it is possible to overload method with same return type but under one condition that the argumnt list should be different. under the
condition if teh arguments are same as that of other argument name then the argument sequence must be atleast changed then.

* The meaning of method overlaoding is to have two o moree mthods which holds the same name as well same class but with different arguments.
and its benefit is that it allows to implement methods which supports the sematic operation but with a different agumnet type or name. 
  
Important Points:

* Argument list must be changed for overloading method
* Return type can be changed in overloading method
* Access modifier can also be changed.
* Under a same class and sb-class method can be over loaded.

import java.util.*;
public class acad
{
public static int acadgild(int n1 , int n2)
    {
		int s=n1+n2;
		return s;
	}
public static int acadgild(String string)
{
	int i=0,n,s=0;
	while(i<string.length()) 
	{
		char c=string.charAt(i);	//getting character from the given string
		n = c;	//  getting ASCII value from each charatcter  
		sum=s+n; //summating ASCII values
		i=i+1;
	}
	return sum;
}
public static void main(String args[])
{
	Scanner s= new Scanner(System.in);
	System.out.println("Enter two numbers:");
	int num1 = Integer.parseInt(s.nextLine());	
	int num2 = Integer.parseInt(s.nextLine());
	System.out.println("Enter the string:");
	String string= s.nextLine();
	System.out.println("Result");
	System.out.println("Sum of two numbers: "+acadgild(num1,num2));   //method sum with two argumnets
	System.out.println("Sum of ASCII values :"+acadgild(string));   // method sum with single argument
	}
}  


*In the above example for the method sum has the same return type whereas it has a different argument list .
*The first output gives the sum of characters and second gives the sum of ASCII values.

---------------------------------------------------------------------------------------------------------------------------------
2)	Write a program in Java using Arrays, which sorts the element in a descending order.


import java.util.*;

public class acad
{
	public static void main(String args[])
	{
		Scanner s= new Scanner(System.in);
		Integer[] descend= new Integer[3];	//we take the input of three integers
		System.out.println("Enter the 3 integers ");
		for (int i=0;i<3;i++)
		{
			descend[i]=s.nextInt();	//getting value for array
		}
		Arrays.sort(descend, Collections.reverseOrder());//output of array in descending order
		System.out.println("Descending order of the given numbers is:");
		int n=descend.length;
		for (int i=0;i<n;i++)
		{
			System.out.println(descend[i]);	//to print the output
		}
	}
}

Here the input string value is already given as three. and it was received from the user.by using sort and reverse the output is
obtained in necessary reverse order.
